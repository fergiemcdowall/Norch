{
  "openapi": "3.0.1",
  "info": {
    "title": "Norch",
    "description": "This is your Norch server. Add documents. Find them again.",
    "contact": {
      "email": "fergus@norch.io"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/fergiemcdowall/search-index/blob/master/LICENSE"
    },
    "version": "1.0.5"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "//localhost:3030/"
    }
  ],
  "tags": [
    {
      "name": "aggregation",
      "description": "Export and import indices"
    },
    {
      "name": "documents",
      "description": "Create, update, remove and retrieve documents"
    },
    {
      "name": "metadata",
      "description": "Get metadata about your index"
    },
    {
      "name": "values",
      "description": "Get information about the tokens in the index"
    },
    {
      "name": "replication",
      "description": "Export and import indices"
    }
  ],
  "paths": {
    "/documents": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "return specified documents",
        "description": "return specified documents",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "document ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      },
      
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Add new documents",
        "description": "TODO...",
        "requestBody": {
          "description": "List of Document objects",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "documents"
      },
      
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "delete specified documents",
        "description": "Delete documents from the index by id",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The ids of the documents to be deleted",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "TODO",
            "content": {}
          },
          "404": {
            "description": "TODO",
            "content": {}
          }
        }
      }
    },
    
    "/documents/all": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "return all documents",
        "description": "Return all documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "max number of documents",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    
    "/documents/count": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "total number of documents",
        "description": "Total number of documents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },

    "/documents/flush": {
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "clear the index (delete all documents)",
        "description": "TODO",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    
    "/documents/query": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "query document index",
        "description": "TODO",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "a search query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/documents/raw": {
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Adds raw documents",
        "description": "TODO...",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/aggregate/buckets": {
      "get": {
        "tags": [
          "aggregation"
        ],
        "summary": "return an aggregation of document ids",
        "description": "TODO: explain what a bucket is",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "specify buckets",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/aggregate/facets": {
      "get": {
        "tags": [
          "aggregation"
        ],
        "summary": "return an aggregation of document ids",
        "description": "TODO: explain what a facet is",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The fields to create facets on",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/values/dictionary": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "returns all tokens in the index",
        "description": "TODO: explain",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "max number of documents",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/values/distinct": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "returns distinct tokens per field",
        "description": "TODO: explain (also, why is this different to dictionary)",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/values/max": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "max alphabetical value per field",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/values/min": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "min alphabetical value per field",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "/meta/created": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "timestamp of when the index was created",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "plain/text": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/meta/fields": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "list of every available fieldname",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "plain/text": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/meta/last-updated": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "timestamp of when the index was last updated",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "plain/text": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/replicate": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "export the index",
        "description": "TODO: explain",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      },

      "post": {
        "tags": [
          "replication"
        ],
        "summary": "import an index",
        "description": "TODO...",
        "requestBody": {
          "description": "List of Document objects",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "required": true
        },

        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Document": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "otherFields": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "FIELD": {
            "type": "string"
          },
          "VALUE": {
            "type": "object",
            "properties": {
              "GTE": {
                "type": "string"
              },
              "LTE": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "scopes": {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account"
            }
          }
        }
      }
    }
  }
}
